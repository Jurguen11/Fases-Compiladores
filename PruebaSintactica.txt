class AllProds
  const int nPoints = 2;
  /* MUESTRA ERROR CORRECTAMENTE 
	correconst char exclaim = '!!'; //debe mostrar error de scanner o de parser por el char de dos elementos
  */
  
const char caracterEspecial = '\n'; //no debe mostrar error puesto que es caracter especial **********
//EN MI CASO MOSTRABA ERROR PORQUE EL CARACTER ESPECIAL NO ESTABA BIEN DEFINIDO, LO CORRECTO ERA '\\n' YO LO PUSE '\n'
  class Point {
    // int x, y; @ ` //error de caracteres invalidos tira error
  }

  char[] msg;
  Point[] pArr;
  boolean test1;

{
  void WriteError ()
    int i;
    boolean test2;
  {
    /* imprimir mensaje error */
    i = 0;
    test1 = true;
    while(i<len(msg)){write(msg[i]);i++;}
    //FORMA INCORRECTA    
   //for(i;i<len(msg);i++){write(msg[i])}
   //FORMA CORRECTA    
   for(i;i<len(msg);i++;){write(msg[i]);} //debe dar error por falta de ; DA ERROR CORRECTAMENTE    write(exclaim);
    while (i > 0) {
      i--;
      if (i < 3 && test1==true) break;	
      write(msg[i], 2);
    }
  }

  int GetX (Point p) { return p.x.Z[3+4]; } //no deber�a dar error la expresi�n

  void SetX (int x, Point p) {
    if (x > -10 && x <= 9 ||
        x == 4*3/4%4+12-11*(2147483647/(-2147483647-1)%2) ) //no deber�a dar error la expresi�n
      p.x = x;
    else WriteError();
  }


  void SetMsg () {
    //msg = new char[5];
 /* AQUI ME DA ERROR YA QUE EL NEW ES UN IDENTIFIER COMPUESTO DE LETRAS Y DIGITOS
	SE PUEDE RESOLVER CAMBIANDO LA REGLA QUE EN VEZ DE UN NEW IDENT SEA UN
	 NEW IDENT [  NUMBER  ] |
	NEW IDENT DESIGNATOR
*/
    msg[0] = 'E';
    msg[1] = 'r';
    msg[2] = 'r';
    msg[3] = 'r';
    msg[4] = msg[3];
    msg[3] = 'o';    
  }

  void SetPoints ()
    int i;
  {
    //pArr = new Point [ nPoints ]; AQUI ME DA ERROR YA QUE EL NEW ES UN IDENTIFIER COMPUESTO DE LETRAS Y DIGITOS
    i = 0;
    while (i < len(pArr)) {
      pArr[i] = new Point;
      pArr[i].x = i;
      pArr[i].y = i;
      i++;
    }
  }

  int prueba(Point x, char w)
  {
      return val.neg[i].algo;
	/*comentario
	/*mal*/ /*anidado 
	*/
  }

  void Main ()
    int i;
  {
    SetMsg();
    SetPoints();
    read(i);
    if (i < nPoints) {
      write(GetX(pArr[i]));
      write(pArr[i].y);
    }
    else
      WriteError();
    write('n');

  }
}

// ANOTAR SUS COMENTARIOS EN MAYUSCULA Y NO QUITAR NADA DE LO QUE VIENE EN EL ARCHIVO SINO SOLO COMENTARLO PERO A LA VEZ COLOCAR EL EQUIVALENTE CORRECTO
// CUALQUIER COSA QUE SEA ERROR MIO AL MOMENTO DE HACER LA PRUEBA, FAVOR CORREGIRLO Y ANOTARLO
